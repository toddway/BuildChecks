apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

project.afterEvaluate {
        def variantName = ""
        def testTaskName = "test"

        tasks.create(name: "${testTaskName}Jacoco", type: JacocoReport, dependsOn: "$testTaskName") {
            group = "Reporting"
            description = "Generate Jacoco coverage reports for the ${variantName.capitalize()} build."

            reports {
                html.enabled = true
                xml.enabled = true
            }

            def excludes = [
                    '**/R.class',
                    '**/R$*.class',
                    '**/Manifest*.*',
                    'android/**/*.*'
            ]
            def javaClasses = fileTree(dir: "${buildDir}/classes/java/${variantName}", excludes: excludes)
            def kotlinClasses = fileTree(dir: "${buildDir}/classes/kotlin/${variantName}", excludes: excludes)
            classDirectories = files([javaClasses, kotlinClasses])

            sourceDirectories = files([
                    "$project.projectDir/src/main/java",
                    "$project.projectDir/src/${variantName}/java",
                    "$project.projectDir/src/main/kotlin",
                    "$project.projectDir/src/${variantName}/kotlin"
            ])

            executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")
        }
}